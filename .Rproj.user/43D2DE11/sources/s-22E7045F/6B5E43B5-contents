---
title: Investigating Non-Aflliated Voter Growth
author: Richard Craig
date: '2021-08-04'
slug: []
categories:
  - Oregon Politics
  - Linear Modeling
tags:
  - Elections
  - Politics
  - R Programming
  - Voter Registration
meta_img: images/image.png
description: Description for the page
---


```{r Voters, include=FALSE}
voters<-read_csv("G:/My Drive/Documents/Willamette/Graduate/DATA 510 Capstone/Voter Registration.csv")
```
### Data Cleaning

This portion of the project is relatively straight forward. Starting out, I pulled in two datasets that are both data from the 2018 American Community Survey. The first dataset is data on the racial makeup of each of the 30 senate districts, so this includes population figures for White, Latinx, Black and Asian. The second dataset is pulling in the total population and the total number of houses in the district. 

```{r Setup, message=FALSE}
library(tidycensus)
library(tidyverse)
library(sf)
library(dplyr)
library(lubridate)
library(caret)
library(dplyr)

this.year=2019

Oregon_Senate_race_acs <- get_acs(geography = "state legislative district (upper chamber)",
                                  year=this.year,
                                  state = "OR", 
                                  variables = c("B02001_001","B02001_002","B03001_003","B02001_003","B02001_005"))

Oregon_Senate_housing_acs<- get_acs(geography = "state legislative district (upper chamber)",
                                    year=this.year, state = "OR", 
                                    variables = c("B02001_001","B25001_001"),
                                    geometry = TRUE)

```

This next step is simple cleaning such as reorganizing the data into more the traditional format and also renaming the variables so that they actually mean something. For the demographics data, I calculated the percent of each of the four racial groups and for the housing data, I calculated the housing and population densities. 

```{r Cleaning Demographics Data, message=FALSE}
Oregon_Senate_race<-Oregon_Senate_race_acs%>%
  pivot_wider(id_cols = c("GEOID", "NAME"),names_from = "variable", values_from = estimate)%>%
  dplyr::select(NAME,total_pop= B02001_001, total_white= B02001_002,total_latinx= B03001_003,total_black= B02001_003, total_asian=B02001_005)

Oregon_Senate_race<-Oregon_Senate_race%>%
  mutate(white_per=total_white/total_pop,latinx_per=total_latinx/total_pop,black_per=total_black/total_pop, asian_per=total_asian/total_pop)
```


```{r Cleaning Housing Data, message=FALSE}
Oregon_Senate_housing<-Oregon_Senate_housing_acs%>%
  mutate(area=st_area(geometry))%>%
  as_tibble()%>%
  dplyr::select(GEOID, NAME, variable, estimate, area)%>%
  pivot_wider(id_cols = c("GEOID", "NAME", "area"),names_from = "variable", values_from = estimate)%>%
  mutate(total_pop=B02001_001, total_houses=B25001_001)%>%
  dplyr::select(-c(B02001_001,B25001_001))%>%
  mutate(area= as.numeric(area*(3.86102e-7)))%>%
  mutate(pop_density=total_pop/area,house_density=total_houses/area)
```

This is a similar step to the forecasting walk through and is just cleaning the voter registration file. 

```{r Cleaning Voters, message=FALSE}

voters_clean<-voters%>%
    mutate(Date=mdy(SYSDATE),House_District= as.factor(HD_CODE), Count=`COUNT(V.ID)`)%>%
    dplyr::select(Date,House_District,PARTY,Count)%>%
    group_by(Date,House_District,PARTY)%>%
    mutate(Total_For_Party=sum(Count))

 voters_clean<-voters_clean%>%
   dplyr::select(-Count)%>%
   unique()%>%
   arrange(Date)


voters_clean<-voters_clean%>%
  pivot_wider(id_cols = c("Date", "House_District"),names_from = PARTY, values_from = Total_For_Party)

voters_clean$`Americans Elect`[is.na(voters_clean$`Americans Elect`)] <- 0
voters_clean$`Non Partisan`[is.na(voters_clean$`Non Partisan`)] <- 0

voters_clean<-voters_clean%>%
  mutate(Other2=Other+`Working Families Party of Oregon`+Progressive+`Pacific Green`+Constitution+Libertarian+Other+`Americans Elect`+`Non Partisan`,
         District_Total = Democrat + Republican+ Other2+`Independent Party`+ Nonaffiliated)%>%
  dplyr::select(Date,House_District, Democrat, Republican, Independent=`Independent Party`, Nonaffiliated,Other=Other2,District_Total)%>%
  drop_na()

```

```{r Creating Senate Districts, message=FALSE, include=FALSE}
senate_clean <- voters_clean
senate_clean$Senate_District <- "None"
senate_clean$Senate_District[senate_clean$House_District == "SR01"] <- "SS01"
senate_clean$Senate_District[senate_clean$House_District == "SR02"] <- "SS01"
senate_clean$Senate_District[senate_clean$House_District == "SR03"] <- "SS02"
senate_clean$Senate_District[senate_clean$House_District == "SR04"] <- "SS02"
senate_clean$Senate_District[senate_clean$House_District == "SR05"] <- "SS03"
senate_clean$Senate_District[senate_clean$House_District == "SR06"] <- "SS03"
senate_clean$Senate_District[senate_clean$House_District == "SR07"] <- "SS04"
senate_clean$Senate_District[senate_clean$House_District == "SR08"] <- "SS04"
senate_clean$Senate_District[senate_clean$House_District == "SR09"] <- "SS05"
senate_clean$Senate_District[senate_clean$House_District == "SR10"] <- "SS05"
senate_clean$Senate_District[senate_clean$House_District == "SR11"] <- "SS06"
senate_clean$Senate_District[senate_clean$House_District == "SR12"] <- "SS06"
senate_clean$Senate_District[senate_clean$House_District == "SR13"] <- "SS07"
senate_clean$Senate_District[senate_clean$House_District == "SR14"] <- "SS07"
senate_clean$Senate_District[senate_clean$House_District == "SR15"] <- "SS08"
senate_clean$Senate_District[senate_clean$House_District == "SR16"] <- "SS08"
senate_clean$Senate_District[senate_clean$House_District == "SR17"] <- "SS09"
senate_clean$Senate_District[senate_clean$House_District == "SR18"] <- "SS09"
senate_clean$Senate_District[senate_clean$House_District == "SR19"] <- "SS10"
senate_clean$Senate_District[senate_clean$House_District == "SR20"] <- "SS10"
senate_clean$Senate_District[senate_clean$House_District == "SR21"] <- "SS11"
senate_clean$Senate_District[senate_clean$House_District == "SR22"] <- "SS11"
senate_clean$Senate_District[senate_clean$House_District == "SR23"] <- "SS12"
senate_clean$Senate_District[senate_clean$House_District == "SR24"] <- "SS12"
senate_clean$Senate_District[senate_clean$House_District == "SR25"] <- "SS13"
senate_clean$Senate_District[senate_clean$House_District == "SR26"] <- "SS13"
senate_clean$Senate_District[senate_clean$House_District == "SR27"] <- "SS14"
senate_clean$Senate_District[senate_clean$House_District == "SR28"] <- "SS14"
senate_clean$Senate_District[senate_clean$House_District == "SR29"] <- "SS15"
senate_clean$Senate_District[senate_clean$House_District == "SR30"] <- "SS15"
senate_clean$Senate_District[senate_clean$House_District == "SR31"] <- "SS16"
senate_clean$Senate_District[senate_clean$House_District == "SR32"] <- "SS16"
senate_clean$Senate_District[senate_clean$House_District == "SR33"] <- "SS17"
senate_clean$Senate_District[senate_clean$House_District == "SR34"] <- "SS17"
senate_clean$Senate_District[senate_clean$House_District == "SR35"] <- "SS18"
senate_clean$Senate_District[senate_clean$House_District == "SR36"] <- "SS18"
senate_clean$Senate_District[senate_clean$House_District == "SR37"] <- "SS19"
senate_clean$Senate_District[senate_clean$House_District == "SR38"] <- "SS19"
senate_clean$Senate_District[senate_clean$House_District == "SR39"] <- "SS20"
senate_clean$Senate_District[senate_clean$House_District == "SR40"] <- "SS20"
senate_clean$Senate_District[senate_clean$House_District == "SR41"] <- "SS21"
senate_clean$Senate_District[senate_clean$House_District == "SR42"] <- "SS21"
senate_clean$Senate_District[senate_clean$House_District == "SR43"] <- "SS22"
senate_clean$Senate_District[senate_clean$House_District == "SR44"] <- "SS22"
senate_clean$Senate_District[senate_clean$House_District == "SR45"] <- "SS23"
senate_clean$Senate_District[senate_clean$House_District == "SR46"] <- "SS23"
senate_clean$Senate_District[senate_clean$House_District == "SR47"] <- "SS24"
senate_clean$Senate_District[senate_clean$House_District == "SR48"] <- "SS24"
senate_clean$Senate_District[senate_clean$House_District == "SR49"] <- "SS25"
senate_clean$Senate_District[senate_clean$House_District == "SR50"] <- "SS25"
senate_clean$Senate_District[senate_clean$House_District == "SR51"] <- "SS26"
senate_clean$Senate_District[senate_clean$House_District == "SR52"] <- "SS26"
senate_clean$Senate_District[senate_clean$House_District == "SR53"] <- "SS27"
senate_clean$Senate_District[senate_clean$House_District == "SR54"] <- "SS27"
senate_clean$Senate_District[senate_clean$House_District == "SR55"] <- "SS28"
senate_clean$Senate_District[senate_clean$House_District == "SR56"] <- "SS28"
senate_clean$Senate_District[senate_clean$House_District == "SR57"] <- "SS29"
senate_clean$Senate_District[senate_clean$House_District == "SR58"] <- "SS29"
senate_clean$Senate_District[senate_clean$House_District == "SR59"] <- "SS30"
senate_clean$Senate_District[senate_clean$House_District == "SR60"] <- "SS30"
senate_clean<-senate_clean%>%
  dplyr::select(-c(House_District))
```

The final step is the one of most interest as we are creating the dependent variable that we will be modelling. This variable is the growth of nonaffiliated voters over the last five years. 

```{r Cleaning Senate Data, message=FALSE}

senate_clean2<-senate_clean%>%
  group_by(Date,Senate_District)%>%
  mutate(Republican = sum(Republican), 
         Democrat = sum(Democrat),
         Other = sum(Other),
         Independent = sum(Independent),
         Nonaffiliated =  sum(Nonaffiliated))
  

senate_clean2<-senate_clean2%>%
  mutate(District_Total = Democrat + Republican+ Other + Independent+ Nonaffiliated, Republican_Per=Republican/District_Total)%>%
  drop_na()

senate_clean2<-senate_clean2%>%
  dplyr::select(Date,Senate_District, Democrat, Republican, Independent, Nonaffiliated,Other,District_Total)%>%
  unique()%>%
  filter(Date== ymd("2021-06-01") | Date == ymd("2016-11-01"))

senate_outcome<-senate_clean2%>%
  pivot_wider(id_cols = c("Senate_District"),names_from = Date, values_from = Nonaffiliated)%>%
  mutate(Growth=`2021-06-01`/`2016-11-01`)%>%
  dplyr::select(District=Senate_District,Growth)

rm(senate_clean2)
```


```{r Changing the name, message=FALSE, include=FALSE}

Senate_Demographics<-left_join(Oregon_Senate_housing,Oregon_Senate_race)

Senate_Demographics$District<-"none"

Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 1 (2018), Oregon"] <- "SS01"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 2 (2018), Oregon"] <- "SS02"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 3 (2018), Oregon"] <- "SS03"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 4 (2018), Oregon"] <- "SS04"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 5 (2018), Oregon"] <- "SS05"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 6 (2018), Oregon"] <- "SS06"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 7 (2018), Oregon"] <- "SS07"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 8 (2018), Oregon"] <- "SS08"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 9 (2018), Oregon"] <- "SS09"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 10 (2018), Oregon"] <- "SS10"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 11 (2018), Oregon"] <- "SS11"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 12 (2018), Oregon"] <- "SS12"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 13 (2018), Oregon"] <- "SS13"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 14 (2018), Oregon"] <- "SS14"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 15 (2018), Oregon"] <- "SS15"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 16 (2018), Oregon"] <- "SS16"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 17 (2018), Oregon"] <- "SS17"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 18 (2018), Oregon"] <- "SS18"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 19 (2018), Oregon"] <- "SS19"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 20 (2018), Oregon"] <- "SS20"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 21 (2018), Oregon"] <- "SS21"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 22 (2018), Oregon"] <- "SS22"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 23 (2018), Oregon"] <- "SS23"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 24 (2018), Oregon"] <- "SS24"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 25 (2018), Oregon"] <- "SS25"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 26 (2018), Oregon"] <- "SS26"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 27 (2018), Oregon"] <- "SS27"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 28 (2018), Oregon"] <- "SS28"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 29 (2018), Oregon"] <- "SS29"
Senate_Demographics$District[Senate_Demographics$NAME == "State Senate District 30 (2018), Oregon"] <- "SS30"

Senate_Demographics<-Senate_Demographics%>%
  dplyr::select(-c(NAME,GEOID))

```

### Exploratory Data Analysis

The next step before I began modeling was some exploratory data analysis! I was mostly interested in the simple relationship between each of the individual independent variables with the dependent variable. What I found was that overall, these six variable are correlated. But, what I was worried about was that I had six features and only 30 data points. So to help reduce the likelihood of over fitting, I combined my variables into two new features, Density and Diversity. You can see how they are calculated in the next step where I actually fit the model. 

```{r Exploratory Data Analysis, message=FALSE}

Senate_Model<-left_join(Senate_Demographics,senate_outcome)%>%
  dplyr::select(District,pop_density,house_density,white_per,latinx_per,black_per,asian_per,Growth)

ggplot(Senate_Model,aes(x=pop_density,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=house_density,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=((pop_density+house_density)/2),y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=white_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=black_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=latinx_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=asian_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=asian_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

ggplot(Senate_Model,aes(x=asian_per+latinx_per+black_per,y=Growth))+
  geom_point()+
  geom_smooth(method="lm")

```

### The 'Final' Model

```{r Linear Model}


Senate_Model_final<-Senate_Model%>%
  mutate(density=(house_density+pop_density)/2,diversity=asian_per+latinx_per+black_per)%>%
  dplyr::select(-c(pop_density,house_density,asian_per,latinx_per,black_per,white_per))

senateo<-Senate_Model_final%>%
  dplyr::select(-c(District))

control <-trainControl(method = "cv", number = 5)

fit <-train(Growth~.,
            data = senateo,
            method = "lm",
            trControl = control,
            preProcess=c("scale","center"))

fit

summary(fit)

```

While we do find that density is a good predictor of growth over the last year, this is in no way saying that it is actually driving that growth. This modelling process was more for my own curiosity and I would not use this model if I was attempting to accurately predict future growth of NAVs. It does begin to shed some light on where NAVs experienced the highest levels of growth. 
